/**
 * Create an api execution object on the given socket for the
 * given Engine class. The API is generated by traversing through
 * all the named properties of the Engine class ignoring the
 * constructor and any names that start with underscore (_). The
 * names are retrieved by travesering through all the base classes
 * as well.
 * @param {*} Engine The game engine class
 * @param {*} socket The socket on which the commands need to be
 *                   sent.
 */
module.exports = function connectApi(Class, socket) {
  function recurse(P, api) {
    if (P.prototype === undefined) {
      return api;
    }

    const names = Object.getOwnPropertyNames(P.prototype);

    names.reduce((res, name) => {
      // Ignore constructor and any name that starts with underscore
      if (name === 'constructor' || name.startsWith('_')) {
        return res;
      }

      // Already used the name, no need to add any more
      if (res[name]) {
        return res;
      }

      res[name] = (...args) => socket.rpc(name, args);
      return res;
    }, api);

    return recurse(Object.getPrototypeOf(P), api);
  }

  return recurse(Class, {});
};
